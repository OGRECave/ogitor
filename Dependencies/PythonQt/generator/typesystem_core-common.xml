<?xml version="1.0"?>
<typesystem>

  <value-type name="QModelIndex"/>
  <rejection class="*" function-name="d_func"/>
  <rejection class="*" function-name="data_ptr"/>
  <rejection class="*" function-name="detach"/>
  <rejection class="*" function-name="isDetached"/>

  <rejection class="*" field-name="d_ptr"/>
  <rejection class="*" field-name="d"/>

  <rejection class="" enum-name="QtValidLicenseForTestModule"/>


  <rejection class="" enum-name="QtValidLicenseForDBusModule"/>
  <rejection class="" enum-name="QtValidLicenseForSqlModule"/>
  <rejection class="" enum-name="QtValidLicenseForOpenGLModule"/>
  <rejection class="" enum-name="enum_1"/>
  <rejection class="" enum-name="QtValidLicenseForXmlModule"/>
  <rejection class="" enum-name="QtValidLicenseForXmlPatternsModule"/>
  <rejection class="" enum-name="QtValidLicenseForActiveQtModule"/>
  <rejection class="" enum-name="QtValidLicenseForCoreModule"/>
  <rejection class="" enum-name="QtValidLicenseForQt3SupportLightModule"/>
  <rejection class="" enum-name="QtValidLicenseForQt3SupportModule"/>
  <rejection class="" enum-name="QtValidLicenseForNetworkModule"/>
  <rejection class="" enum-name="QtValidLicenseForSvgModule"/>
  <rejection class="" enum-name="QtValidLicenseForGuiModule"/>
  <rejection class="" enum-name="QtValidLicenseForScriptModule"/>
  <rejection class="" enum-name="QtValidLicenseForHelpModule"/>
  <rejection class="" enum-name="QtValidLicenseForScriptToolsModule" />
  <rejection class="" enum-name="QtValidLicenseForMultimediaModule" />
  <rejection class="" enum-name="QtValidLicenseForOpenVGModule" />
  <rejection class="" enum-name="QtValidLicenseForDeclarativeModule" />


  <rejection class="QtConcurrent" enum-name="enum_1" />
  <rejection class="QtConcurrent" function-name="operator|" />

  <rejection class="Qt" enum-name="Modifier" />

  <rejection class="QSharedPointer" />
  <rejection class="QWeakPointer" />
  <rejection class="QFuture::const_iterator" />
  <rejection class="QFutureInterface" />
  <rejection class="QFutureInterfaceBase" />
  <rejection class="QtConcurrent::BlockSizeManager" />
  <rejection class="QtConcurrent::ConstMemberFunctionWrapper" />
  <rejection class="QtConcurrent::Exception"/>
  <rejection class="QtConcurrent::FilterKernel"/>
  <rejection class="QtConcurrent::FilteredEachKernel"/>
  <rejection class="QtConcurrent::FilteredReducedKernel"/>
  <rejection class="QtConcurrent::FunctionWrapper0"/>
  <rejection class="QtConcurrent::FunctionWrapper1"/>
  <rejection class="QtConcurrent::FunctionWrapper2"/>
  <rejection class="QtConcurrent::IntermediateResults"/>
  <rejection class="QtConcurrent::IterateKernel"/>
  <rejection class="QtConcurrent::MapKernel"/>
  <rejection class="QtConcurrent::MappedEachKernel"/>
  <rejection class="QtConcurrent::MappedReducedKernel"/>
  <rejection class="QtConcurrent::Median"/>
  <rejection class="QtConcurrent::MemberFunctionWrapper"/>
  <rejection class="QtConcurrent::MemberFunctionWrapper1"/>
  <rejection class="QtConcurrent::qValueType" />
  <rejection class="QtConcurrent::ReduceKernel"/>
  <rejection class="QtConcurrent::ResultItem"/>
  <rejection class="QtConcurrent::ResultIterator"/>
  <rejection class="QtConcurrent::ResultIteratorBase"/>
  <rejection class="QtConcurrent::ResultReporter"/>
  <rejection class="QtConcurrent::ResultStore"/>
  <rejection class="QtConcurrent::ResultStoreBase"/>
  <rejection class="QtConcurrent::RunFunctionTask"/>
  <rejection class="QtConcurrent::RunFunctionTaskBase"/>
  <rejection class="QtConcurrent::SelectSpecialization"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionCall0"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionCall1"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionCall2"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionCall3"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionCall4"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionCall5"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionPointerCall0"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionPointerCall1"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionPointerCall2"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionPointerCall3"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionPointerCall4"/>
  <rejection class="QtConcurrent::SelectStoredConstMemberFunctionPointerCall5"/>
  <rejection class="QtConcurrent::SelectStoredFunctorCall0"/>
  <rejection class="QtConcurrent::SelectStoredFunctorCall1"/>
  <rejection class="QtConcurrent::SelectStoredFunctorCall2"/>
  <rejection class="QtConcurrent::SelectStoredFunctorCall3"/>
  <rejection class="QtConcurrent::SelectStoredFunctorCall4"/>
  <rejection class="QtConcurrent::SelectStoredFunctorCall5"/>
  <rejection class="QtConcurrent::SelectStoredFunctorPointerCall0"/>
  <rejection class="QtConcurrent::SelectStoredFunctorPointerCall1"/>
  <rejection class="QtConcurrent::SelectStoredFunctorPointerCall2"/>
  <rejection class="QtConcurrent::SelectStoredFunctorPointerCall3"/>
  <rejection class="QtConcurrent::SelectStoredFunctorPointerCall4"/>
  <rejection class="QtConcurrent::SelectStoredFunctorPointerCall5"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionCall0"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionCall1"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionCall2"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionCall3"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionCall4"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionCall5"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionPointerCall0"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionPointerCall1"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionPointerCall2"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionPointerCall3"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionPointerCall4"/>
  <rejection class="QtConcurrent::SelectStoredMemberFunctionPointerCall5"/>
  <rejection class="QtConcurrent::SequenceHolder1"/>
  <rejection class="QtConcurrent::SequenceHolder2"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionCall0"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionCall1"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionCall2"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionCall3"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionCall4"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionCall5"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionPointerCall0"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionPointerCall1"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionPointerCall2"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionPointerCall3"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionPointerCall4"/>
  <rejection class="QtConcurrent::StoredConstMemberFunctionPointerCall5"/>
  <rejection class="QtConcurrent::StoredFunctorCall0"/>
  <rejection class="QtConcurrent::StoredFunctorCall1"/>
  <rejection class="QtConcurrent::StoredFunctorCall2"/>
  <rejection class="QtConcurrent::StoredFunctorCall3"/>
  <rejection class="QtConcurrent::StoredFunctorCall4"/>
  <rejection class="QtConcurrent::StoredFunctorCall5"/>
  <rejection class="QtConcurrent::StoredFunctorPointerCall0"/>
  <rejection class="QtConcurrent::StoredFunctorPointerCall1"/>
  <rejection class="QtConcurrent::StoredFunctorPointerCall2"/>
  <rejection class="QtConcurrent::StoredFunctorPointerCall3"/>
  <rejection class="QtConcurrent::StoredFunctorPointerCall4"/>
  <rejection class="QtConcurrent::StoredFunctorPointerCall5"/>
  <rejection class="QtConcurrent::StoredMemberFunctionCall0"/>
  <rejection class="QtConcurrent::StoredMemberFunctionCall1"/>
  <rejection class="QtConcurrent::StoredMemberFunctionCall2"/>
  <rejection class="QtConcurrent::StoredMemberFunctionCall3"/>
  <rejection class="QtConcurrent::StoredMemberFunctionCall4"/>
  <rejection class="QtConcurrent::StoredMemberFunctionCall5"/>
  <rejection class="QtConcurrent::StoredMemberFunctionPointerCall0"/>
  <rejection class="QtConcurrent::StoredMemberFunctionPointerCall1"/>
  <rejection class="QtConcurrent::StoredMemberFunctionPointerCall2"/>
  <rejection class="QtConcurrent::StoredMemberFunctionPointerCall3"/>
  <rejection class="QtConcurrent::StoredMemberFunctionPointerCall4"/>
  <rejection class="QtConcurrent::StoredMemberFunctionPointerCall5"/>
  <rejection class="QtConcurrent::ThreadEngine"/>
  <rejection class="QtConcurrent::ThreadEngineBase"/>
  <rejection class="QtConcurrent::ThreadEngineSemaphore"/>
  <rejection class="QtConcurrent::ThreadEngineStarter"/>
  <rejection class="QtConcurrent::ThreadEngineStarterBase"/>
  <rejection class="QtConcurrent::UnhandledException"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionCall0"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionCall1"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionCall2"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionCall3"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionCall4"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionCall5"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionPointerCall0"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionPointerCall1"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionPointerCall2"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionPointerCall3"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionPointerCall4"/>
  <rejection class="QtConcurrent::VoidStoredConstMemberFunctionPointerCall5"/>
  <rejection class="QtConcurrent::VoidStoredFunctorCall0"/>
  <rejection class="QtConcurrent::VoidStoredFunctorCall1"/>
  <rejection class="QtConcurrent::VoidStoredFunctorCall2"/>
  <rejection class="QtConcurrent::VoidStoredFunctorCall3"/>
  <rejection class="QtConcurrent::VoidStoredFunctorCall4"/>
  <rejection class="QtConcurrent::VoidStoredFunctorCall5"/>
  <rejection class="QtConcurrent::VoidStoredFunctorPointerCall0"/>
  <rejection class="QtConcurrent::VoidStoredFunctorPointerCall1"/>
  <rejection class="QtConcurrent::VoidStoredFunctorPointerCall2"/>
  <rejection class="QtConcurrent::VoidStoredFunctorPointerCall3"/>
  <rejection class="QtConcurrent::VoidStoredFunctorPointerCall4"/>
  <rejection class="QtConcurrent::VoidStoredFunctorPointerCall5"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionCall0"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionCall1"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionCall2"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionCall3"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionCall4"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionCall5"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionPointerCall0"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionPointerCall1"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionPointerCall2"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionPointerCall3"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionPointerCall4"/>
  <rejection class="QtConcurrent::VoidStoredMemberFunctionPointerCall5"/>

  <rejection class="QMdi" />
  <rejection class="stdext" />
  <rejection class="QAlgorithmsPrivate"/>
  <rejection class="QAtomic"/>
  <rejection class="QAtomicPointer"/>
  <rejection class="QAtomicInt" />
  <rejection class="QBasicAtomicInt" />
  <rejection class="QBasicAtomic"/>
  <rejection class="QBasicAtomicPointer"/>
  <rejection class="QScopedPointer"/>
  <rejection class="QScopedArrayPointer" />
  <rejection class="QScopedPointer" />
  <rejection class="QScopedPointerArrayDeleter" />
  <rejection class="QScopedPointerDeleter" />
  <rejection class="QScopedPointerPodDeleter" />
  <rejection class="QScopedPointerSharedDeleter" />
  <rejection class="QScopedSharedPointer" />
  <rejection class="QCustomScopedPointer" />
  <rejection class="QStringBuilder" />

  <rejection class="QBitRef"/>
  <rejection class="QCache"/>
  <rejection class="QContiguousCache"/>
  <rejection class="QContiguousCacheData"/>
  <rejection class="QContiguousCacheTypedData"/>
  <rejection class="QCharRef"/>
  <rejection class="QDebug"/>
  <rejection class="QNoDebug" />
  <rejection class="QExplicitlySharedDataPointer"/>
  <rejection class="QFlag"/>
  <rejection class="QFlags"/>
  <rejection class="QForeachContainer"/>
  <rejection class="QForeachContainerBase"/>
  <rejection class="QGlobalStatic"/>
  <rejection class="QHash"/>
  <rejection class="QHashData"/>
  <rejection class="QHashDummyNode"/>
  <rejection class="QHashDummyNode"/>
  <rejection class="QHashDummyNode"/>
  <rejection class="QHashDummyNode"/>
  <rejection class="QHashDummyNode"/>
  <rejection class="QHashDummyValue"/>
  <rejection class="QHashIterator"/>
  <rejection class="QHashNode"/>
  <rejection class="QHashNode"/>
  <rejection class="QHashNode"/>
  <rejection class="QHashNode"/>
  <rejection class="QHashNode"/>
  <rejection class="QInternal"/>
  <rejection class="QIncompatibleFlag" />
  <rejection class="QLibrary"/>
  <rejection class="QLinkedList"/>
  <rejection class="QLinkedListData"/>
  <rejection class="QLinkedListIterator"/>
  <rejection class="QLinkedListNode"/>
  <rejection class="QListData"/>
  <rejection class="QListIterator"/>
  <rejection class="QMap"/>
  <rejection class="QMapNode" />
  <rejection class="QMapPayloadNode" />
  <rejection class="QMapData"/>
  <rejection class="QMapIterator"/>
  <rejection class="QMetaType"/>
  <rejection class="QMetaTypeId"/>
  <rejection class="QMetaProperty"/>
  <rejection class="QMetaObject"/>
  <rejection class="QMetaClassInfo"/>
  <rejection class="QMetaMethod"/>
  <rejection class="QMetaEnum"/>
  <rejection class="QMultiHash"/>
  <rejection class="QMultiMap"/>
  <rejection class="QMutableHashIterator"/>
  <rejection class="QMutableLinkedListIterator"/>
  <rejection class="QMutableListIterator"/>
  <rejection class="QMutableMapIterator"/>
  <rejection class="QMutableVectorIterator"/>
  <rejection class="QMutexLocker"/>
  <rejection class="QNoImplicitBoolCast"/>
  <rejection class="QObjectCleanupHandler"/>
  <rejection class="QObjectData"/>
  <rejection class="QObjectUserData"/>
  <rejection class="QPluginLoader"/>
  <rejection class="QPointer"/>
  <rejection class="QReadLocker"/>
  <rejection class="QResource"/>
  <rejection class="QSet"/>
  <rejection class="QSetIterator"/>
  <rejection class="QSharedData"/>
  <rejection class="QSharedDataPointer"/>
  <rejection class="QStack"/>
  <rejection class="QSysInfo"/>
  <rejection class="QTextStreamManipulator"/>
  <rejection class="QThreadStorage"/>
  <rejection class="QThreadStorageData"/>
  <rejection class="QTypeInfo"/>
  <rejection class="QTypeInfo"/>
  <rejection class="QVFbKeyData"/>
  <rejection class="QVariantComparisonHelper"/>
  <rejection class="QVectorData"/>
  <rejection class="QVectorIterator"/>
  <rejection class="QVectorTypedData"/>
  <rejection class="QWriteLocker"/>
  <rejection class="QtPrivate"/>
  <rejection class="qGreater"/>
  <rejection class="qLess"/>
  <rejection class="std"/>
  <rejection class="QAbstractFileEngine::ExtensionOption"/>
  <rejection class="QAbstractFileEngine::ExtensionReturn"/>
  <rejection class="QByteArray::Data"/>
  <rejection class="QIntForType"/>
  <rejection class="QList::Node"/>
  <rejection class="QList::const_iterator"/>
  <rejection class="QList::iterator"/>
  <rejection class="QMetaTypeId2"/>
  <rejection class="QMutableSetIterator"/>
  <rejection class="QSubString"/>
  <rejection class="QUintForType"/>
  <rejection class="QtConcurrent::internal" />
  <rejection class="QByteArrayMatcher::Data" />
  <rejection class="QStringMatcher::Data" />

  <rejection class="StringBuilder" />
  <rejection class="QConcatenable" />
  <rejection class="QLatin1Literal" />
  <rejection class="QIntegerForSizeof" />


  <rejection class="QLocale::Data" />
  <rejection class="QGlobalStaticDeleter" />
  <rejection class="QSharedMemory" /> <!-- Temporarily until we know how to implement it in Java -->
  <rejection class="QVarLengthArray" />

  <!-- DBus -->
  <rejection class="QDBusAbstractAdaptor" />
  <rejection class="QDBusAbstractInterface" />
  <rejection class="QDBusArgument" />
  <rejection class="QDBusConnection" />
  <rejection class="QDBusConnectionInterface" />
  <rejection class="QDBusContext" />
  <rejection class="QDBusError" />
  <rejection class="QDBusInterface" />
  <rejection class="QDBusMessage" />
  <rejection class="QDBusMetaType" />
  <rejection class="QDBusObjectPath" />
  <rejection class="QDBusReply" />
  <rejection class="QDBusServer" />
  <rejection class="QDBusSignature" />
  <rejection class="QDBusVariant" />

  <rejection class="_Revbidit" />
  <rejection class="_complex" />
  <rejection class="_exception" />
  <rejection class="_iobuf" />
  <rejection class="_stat" />
  <rejection class="_wfinddata_t" />
  <rejection class="exception" />
  <rejection class="istreambuf_iterator" />
  <rejection class="ostreambuf_iterator" />
  <rejection class="reverse_bidirectional_iterator" />
  <rejection class="reverse_iterator" />
  <rejection class="stat" />
  <rejection class="tm" />

  <rejection class="Qt" enum-name="Initialization" />

  <rejection class="QAbstractEventDispatcher" function-name="filterEvent"/>
  <rejection class="QAbstractEventDispatcher" function-name="setEventFilter"/>

  <rejection class="QAbstractFileEngine" function-name="extension"/>
  <rejection class="QCoreApplication" function-name="compressEvent"/>
  <rejection class="QCoreApplication" function-name="eventFilter"/>
  <rejection class="QCoreApplication" function-name="filterEvent"/>
  <rejection class="QCoreApplication" function-name="setEventFilter"/>
  <rejection class="QFile" function-name="setDecodingFunction"/>
  <rejection class="QFile" function-name="setEncodingFunction"/>
  <rejection class="QList" function-name="begin"/>
  <rejection class="QList" function-name="constBegin"/>
  <rejection class="QList" function-name="constEnd"/>
  <rejection class="QList" function-name="end"/>
  <rejection class="QList" function-name="erase"/>
  <rejection class="QList" function-name="erase"/>
  <rejection class="QList" function-name="free"/>
  <rejection class="QList" function-name="fromList"/>
  <rejection class="QList" function-name="fromSet"/>
  <rejection class="QList" function-name="fromSet"/>
  <rejection class="QList" function-name="insert"/>
  <rejection class="QList" function-name="malloc"/>
  <rejection class="QList" function-name="node_construct"/>
  <rejection class="QList" function-name="node_copy"/>
  <rejection class="QList" function-name="node_destruct"/>
  <rejection class="QList" function-name="toSet"/>
  <rejection class="QObject" function-name="receivers"/>
  <rejection class="QObject" function-name="findChild"/>
  <rejection class="QObject" function-name="findChildren"/>
  <rejection class="QObject" function-name="setUserData"/>
  <rejection class="QObject" function-name="userData"/>
  <rejection class="QObject" function-name="destroyed"/>
  <rejection class="QObject" function-name="connect"/>
  <rejection class="QObject" function-name="connectNotify"/>
  <rejection class="QObject" function-name="disconnect"/>
  <rejection class="QObject" function-name="disconnectNotify"/>
  <rejection class="QObject" function-name="registerUserData"/>
  <rejection class="QProcess" function-name="pid"/>
  <rejection class="QRegion" function-name="cleanUp"/>
  <rejection class="QSettings" function-name="registerFormat"/>
  <rejection class="QVector" function-name="back"/>
  <rejection class="QVector" function-name="begin"/>
  <rejection class="QVector" function-name="constBegin"/>
  <rejection class="QVector" function-name="constEnd"/>
  <rejection class="QVector" function-name="end"/>
  <rejection class="QVector" function-name="erase"/>
  <rejection class="QVector" function-name="free"/>
  <rejection class="QVector" function-name="front"/>
  <rejection class="QVector" function-name="insert"/>
  <rejection class="QVector" function-name="malloc"/>
  <rejection class="QVector" function-name="alloc"/>
  <rejection class="QVector" function-name="operator+="/>
  <rejection class="QAbstractFileEngineIterator" function-name="entryInfo"/>
  <rejection class="QtConcurrent::ThreadEngineBarrier" />

  <rejection class="QAbstractFileEngineIterator" enum-name="EntryInfoType"/>
  <rejection class="QDataStream" enum-name="ByteOrder"/>


  <namespace-type name="Qt">
  </namespace-type>

  <enum-type name="QDate::MonthNameType" />
  <enum-type name="QAbstractAnimation::DeletionPolicy" />
  <enum-type name="QAbstractAnimation::Direction" />
  <enum-type name="QAbstractAnimation::State" />
  <enum-type name="QDataStream::FloatingPointPrecision" />
  <enum-type name="QEasingCurve::Type" />
  <enum-type name="QHistoryState::HistoryType" />
  <enum-type name="QState::ChildMode" />
  <enum-type name="QStateMachine::Error" />
  <enum-type name="QStateMachine::EventPriority" />
  <enum-type name="QStateMachine::RestorePolicy" />
  <enum-type name="Qt::AnchorPoint" />
  <enum-type name="Qt::CoordinateSystem" />
  <enum-type name="Qt::GestureState" />
  <enum-type name="Qt::InputMethodHint" flags="Qt::InputMethodHints" />
  <enum-type name="Qt::NavigationMode" />
  <enum-type name="Qt::RenderHint" />
  <enum-type name="Qt::TileRule" />
  <enum-type name="Qt::TouchPointState" flags="Qt::TouchPointStates" />

  <enum-type name="QtMsgType">
    <reject-enum-value name="QtSystemMsg" />
  </enum-type>


  <enum-type name="QReadWriteLock::RecursionMode" />
  <enum-type name="QSystemSemaphore::AccessMode" />
  <enum-type name="QSystemSemaphore::SystemSemaphoreError" />
  <enum-type name="QTextBoundaryFinder::BoundaryReason" flags="QTextBoundaryFinder::BoundaryReasons" />
  <enum-type name="QTextBoundaryFinder::BoundaryType" />
  <enum-type name="QAbstractFileEngine::Extension" extensible="yes"/>
  <enum-type name="QAbstractFileEngine::FileFlag" flags="QAbstractFileEngine::FileFlags"/>
  <enum-type name="QAbstractFileEngine::FileName"/>
  <enum-type name="QAbstractFileEngine::FileOwner"/>
  <enum-type name="QAbstractFileEngine::FileTime"/>
  <enum-type name="QDataStream::Status"/>
  <enum-type name="QDir::Filter" flags="QDir::Filters"/>
  <enum-type name="QEvent::Type" extensible="yes">
    <reject-enum-value name="ApplicationActivated"/>
    <reject-enum-value name="ApplicationDeactivated"/>
  </enum-type>
  <enum-type name="QEventLoop::ProcessEventsFlag" flags="QEventLoop::ProcessEventsFlags"/>
  <enum-type name="QFile::FileError"/>
  <enum-type name="QFile::MemoryMapFlags" />
  <enum-type name="QFile::Permission" flags="QFile::Permissions"/>
  <enum-type name="QIODevice::OpenModeFlag" flags="QIODevice::OpenMode"/>
  <enum-type name="QLibraryInfo::LibraryLocation"/>
  <enum-type name="QLocale::FormatType"/>
  <enum-type name="QLocale::NumberOption" flags="QLocale::NumberOptions"/>
  <enum-type name="QLocale::MeasurementSystem" />
  <enum-type name="QMutex::RecursionMode"/>
  <enum-type name="QProcess::ExitStatus"/>
  <enum-type name="QProcess::ProcessChannel"/>
  <enum-type name="QProcess::ProcessChannelMode"/>
  <enum-type name="QProcess::ProcessError"/>
  <enum-type name="QProcess::ProcessState"/>
  <enum-type name="QRegExp::CaretMode"/>
  <enum-type name="QRegExp::PatternSyntax"/>
  <enum-type name="QSettings::Format"/>
  <enum-type name="QSettings::Scope"/>
  <enum-type name="QSettings::Status"/>
  <enum-type name="QSocketNotifier::Type"/>
  <enum-type name="QSystemLocale::QueryType"/>
  <enum-type name="QTextCodec::ConversionFlag" flags="QTextCodec::ConversionFlags"/>
  <enum-type name="QTextStream::FieldAlignment"/>
  <enum-type name="QTextStream::NumberFlag" flags="QTextStream::NumberFlags"/>
  <enum-type name="QTextStream::RealNumberNotation"/>
  <enum-type name="QTextStream::Status"/>
  <enum-type name="QTimeLine::CurveShape"/>
  <enum-type name="QTimeLine::Direction"/>
  <enum-type name="QTimeLine::State"/>
  <enum-type name="QUrl::FormattingOption" flags="QUrl::FormattingOptions"/>
  <enum-type name="QUrl::ParsingMode"/>
  <enum-type name="QUuid::Variant"/>
  <enum-type name="QUuid::Version"/>
  <enum-type name="Qt::SizeHint" />
  <enum-type name="Qt::SizeMode" />
  <enum-type name="Qt::WindowFrameSection" />
  <enum-type name="Qt::Axis"/>
  <enum-type name="Qt::AnchorAttribute"/>
  <enum-type name="Qt::ApplicationAttribute"/>
  <enum-type name="Qt::ArrowType"/>
  <enum-type name="Qt::AspectRatioMode"/>
  <enum-type name="Qt::BGMode"/>
  <enum-type name="Qt::BrushStyle"/>
  <enum-type name="Qt::CaseSensitivity"/>
  <enum-type name="Qt::CheckState"/>
  <enum-type name="Qt::ClipOperation"/>
  <enum-type name="Qt::ConnectionType"/>
  <enum-type name="Qt::ContextMenuPolicy"/>
  <enum-type name="Qt::Corner"/>
  <enum-type name="Qt::DayOfWeek"/>
  <enum-type name="Qt::DockWidgetAreaSizes"/>
  <enum-type name="Qt::DropAction" flags="Qt::DropActions"/>
  <enum-type name="Qt::FillRule"/>
  <enum-type name="Qt::FocusPolicy"/>
  <enum-type name="Qt::FocusReason"/>
  <enum-type name="Qt::GlobalColor"/>
  <enum-type name="Qt::HitTestAccuracy"/>
  <enum-type name="Qt::InputMethodQuery"/>
  <enum-type name="Qt::ItemFlag" flags="Qt::ItemFlags"/>
  <enum-type name="Qt::ItemSelectionMode"/>
  <enum-type name="Qt::KeyboardModifier" flags="Qt::KeyboardModifiers"/>
  <enum-type name="Qt::LayoutDirection"/>
  <enum-type name="Qt::MatchFlag" flags="Qt::MatchFlags"/>
  <enum-type name="Qt::MouseButton" flags="Qt::MouseButtons"/>
  <enum-type name="Qt::Orientation" flags="Qt::Orientations"/>
  <enum-type name="Qt::PenCapStyle"/>
  <enum-type name="Qt::PenJoinStyle"/>
  <enum-type name="Qt::PenStyle"/>
  <enum-type name="Qt::ScrollBarPolicy"/>
  <enum-type name="Qt::ShortcutContext"/>
  <enum-type name="Qt::SortOrder"/>
  <enum-type name="Qt::TextElideMode"/>
  <enum-type name="Qt::TextFlag"/>
  <enum-type name="Qt::TextFormat"/>
  <enum-type name="Qt::TextInteractionFlag" flags="Qt::TextInteractionFlags"/>
  <enum-type name="Qt::TimeSpec"/>
  <enum-type name="Qt::ToolBarAreaSizes"/>
  <enum-type name="Qt::ToolButtonStyle"/>
  <enum-type name="Qt::TransformationMode"/>
  <enum-type name="Qt::UIEffect"/>
  <enum-type name="Qt::WhiteSpaceMode"/>
  <enum-type name="Qt::WindowModality"/>
  <enum-type name="Qt::WindowState" flags="Qt::WindowStates"/>
  <enum-type name="Qt::WindowType" flags="Qt::WindowFlags"/>
  <enum-type name="QDirIterator::IteratorFlag" flags="QDirIterator::IteratorFlags"/>
  <enum-type name="Qt::EventPriority"/>
  <enum-type name="Qt::MaskMode"/>
  <enum-type name="QCryptographicHash::Algorithm"/>

  <enum-type name="QtConcurrent::ReduceOption" flags="QtConcurrent::ReduceOptions" />
  <enum-type name="QtConcurrent::ThreadFunctionResult" />
 

  <enum-type name="QCoreApplication::Encoding">
    <reject-enum-value name="DefaultCodec"/>
  </enum-type>

  <enum-type name="Qt::AlignmentFlag" flags="Qt::Alignment">
    <reject-enum-value name="AlignLeading"/>
    <reject-enum-value name="AlignTrailing"/>
  </enum-type>

  <enum-type name="Qt::CursorShape">
    <reject-enum-value name="LastCursor"/>
  </enum-type>

  <enum-type name="Qt::DateFormat">
    <reject-enum-value name="LocalDate"/>
  </enum-type>


  <enum-type name="Qt::ItemDataRole" force-integer="yes">
    <reject-enum-value name="BackgroundColorRole"/>
    <reject-enum-value name="TextColorRole"/>
  </enum-type>


  <enum-type name="QDataStream::Version">
    <reject-enum-value name="Qt_4_1"/>
  </enum-type>

  <enum-type name="QDir::SortFlag" flags="QDir::SortFlags">
    <reject-enum-value name="Unsorted"/>
  </enum-type>

  <enum-type name="Qt::DockWidgetArea" flags="Qt::DockWidgetAreas">
    <reject-enum-value name="AllDockWidgetAreas"/>
  </enum-type>

  <enum-type name="Qt::ImageConversionFlag" flags="Qt::ImageConversionFlags">
    <reject-enum-value name="AutoDither"/>
    <reject-enum-value name="ColorOnly"/>
    <reject-enum-value name="DiffuseDither"/>
    <reject-enum-value name="NoAlpha"/>
    <reject-enum-value name="ThresholdAlphaDither"/>
  </enum-type>

  <enum-type name="Qt::Key">
    <reject-enum-value name="Key_Any"/>
  </enum-type>

  <enum-type name="QLocale::Language">
    <reject-enum-value name="LastLanguage"/>
    <reject-enum-value name="NorwegianBokmal"/>
    <reject-enum-value name="Nynorsk"/>
  </enum-type>

  <enum-type name="QLocale::Country">
    <reject-enum-value name="LastCountry"/>
  </enum-type>

  <enum-type name="Qt::ToolBarArea" flags="Qt::ToolBarAreas">
    <reject-enum-value name="AllToolBarAreas"/>
  </enum-type>

  <enum-type name="Qt::WidgetAttribute">
    <reject-enum-value name="WA_ForceAcceptDrops"/>
    <reject-enum-value name="WA_NoBackground"/>
    <reject-enum-value name="WA_MacMetalStyle"/>
  </enum-type>

  <value-type name="QProcessEnvironment" />
  <value-type name="QBasicTimer"/>
  <value-type name="QByteArrayMatcher">
    <modify-function signature="operator=(QByteArrayMatcher)" remove="all"/>
  </value-type>

  <value-type name="QDate">
    <modify-function signature="julianToGregorian(uint,int&amp;,int&amp;,int&amp;)">
      <remove/>
    </modify-function>

    <modify-function signature="setYMD(int, int, int)" remove="all"/>
    <!--### Obsolete in 4.3-->
  </value-type>

  <value-type name="QDateTime">
    <modify-function signature="operator=(QDateTime)" remove="all"/>
  </value-type>

  <value-type name="QDir">
    <modify-function signature="QDir(QString,QString,QFlags&lt;QDir::SortFlag&gt;,QFlags&lt;QDir::Filter&gt;)">
      <modify-argument index="3">
        <replace-default-expression with="SortFlag.Name, SortFlag.IgnoreCase"/>
      </modify-argument>
    </modify-function>
    <modify-function signature="operator=(QDir)" remove="all"/>
    <modify-function signature="operator=(QString)" remove="all"/>
    <modify-function signature="addResourceSearchPath(QString)" remove="all"/>
    <!--### Obsolete in 4.3-->
  </value-type>

  <value-type name="QPoint"/>
  <value-type name="QPointF"/>
  <enum-type name="QLineF::IntersectType"/>
  <value-type name="QLineF"/>
  <value-type name="QLine"/>
 
  <value-type name="QRect">
    <modify-function signature="getCoords(int*,int*,int*,int*)const">
      <remove/>
    </modify-function>
    <modify-function signature="getRect(int*,int*,int*,int*)const">
      <remove/>
    </modify-function>
    <modify-function signature="operator&amp;=(QRect)">
      <remove/>
    </modify-function>
    <modify-function signature="operator|=(QRect)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&amp;(QRect)const">
      <remove/>
    </modify-function>
    <modify-function signature="operator|(QRect)const">
      <remove/>
    </modify-function>

    <modify-function signature="intersect(const QRect&amp;)const" remove="all"/>
    <!--### Obsolete in 4.3-->
    <modify-function signature="unite(const QRect&amp;)const" remove="all"/>
    <!--### Obsolete in 4.3-->
  </value-type>

  <value-type name="QRectF">
    <modify-function signature="getCoords(double*,double*,double*,double*)const">
      <remove/>
    </modify-function>
    <modify-function signature="getRect(double*,double*,double*,double*)const">
      <remove/>
    </modify-function>
    <modify-function signature="operator&amp;=(QRectF)">
      <remove/>
    </modify-function>
    <modify-function signature="operator|=(QRectF)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&amp;(QRectF)const">
      <remove/>
    </modify-function>
    <modify-function signature="operator|(QRectF)const">
      <remove/>
    </modify-function>

    <modify-function signature="intersect(const QRectF&amp;)const" remove="all"/>
    <!--### Obsolete in 4.3-->
    <modify-function signature="unite(const QRectF&amp;)const" remove="all"/>
    <!--### Obsolete in 4.3-->
  </value-type>


  <value-type name="QSize">
    <modify-function signature="operator*=(double)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="operator/=(double)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="operator+=(QSize)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="operator-=(QSize)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="rheight()">
      <remove/>
    </modify-function>
    <modify-function signature="rwidth()">
      <remove/>
    </modify-function>
  </value-type>

  <value-type name="QSizeF">
    <modify-function signature="operator*=(double)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="operator/=(double)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="operator+=(QSizeF)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="operator-=(QSizeF)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="rheight()">
      <remove/>
    </modify-function>
    <modify-function signature="rwidth()">
      <remove/>
    </modify-function>
  </value-type>

  <value-type name="QStringMatcher">
    <modify-function signature="operator=(QStringMatcher)" remove="all"/>
    <modify-function signature="QStringMatcher(const QChar*,int,Qt::CaseSensitivity)" remove="all" />
    <modify-function signature="indexIn(const QChar*,int,int)const" remove="all" />
  </value-type>

  <value-type name="QTime"/>

  <value-type name="QPersistentModelIndex">
    <modify-function signature="operator=(QPersistentModelIndex)" remove="all"/>
    <modify-function signature="operator=(QModelIndex)" remove="all"/>
    <modify-function signature="internalPointer()const" remove="all"/>
  </value-type>

  <value-type name="QUuid">
    <modify-function signature="QUuid(const char*)">
      <remove/>
    </modify-function>
  </value-type>

  <value-type name="QLocale">
    <modify-function signature="toString(unsigned long long) const" remove="all"/>
    <modify-function signature="toString(unsigned short) const" remove="all"/>
    <modify-function signature="toString(unsigned int) const" remove="all"/>
    <modify-function signature="toUInt(QString,bool*,int)const" remove="all"/>
    <modify-function signature="toULongLong(QString,bool*,int)const" remove="all"/>
    <modify-function signature="operator=(QLocale)" remove="all"/>
  </value-type>


  <value-type name="QBitArray">
    <modify-function signature="operator[](int)" remove="all"/>
    <modify-function signature="operator[](int)const" remove="all"/>
    <modify-function signature="operator[](uint)const" remove="all"/>
    <modify-function signature="operator[](uint)" remove="all"/>

    <modify-function signature="operator&amp;=(QBitArray)" access="private"/>
    <modify-function signature="operator=(QBitArray)" access="private"/>
    <modify-function signature="operator^=(QBitArray)" access="private"/>
    <modify-function signature="operator|=(QBitArray)" access="private"/>
    <modify-function signature="operator~()const" access="private"/>
  </value-type>

  <object-type name="QReadWriteLock"/>
  <object-type name="QDirIterator"/>
  <object-type name="QAbstractFileEngineIterator"/>
  <object-type name="QAbstractItemModel">
    <modify-function signature="rowsAboutToBeInserted(QModelIndex,int,int)" private-signal="yes"/>
    <modify-function signature="rowsInserted(QModelIndex,int,int)" private-signal="yes"/>

    <modify-function signature="rowsAboutToBeRemoved(QModelIndex,int,int)" private-signal="yes"/>
    <modify-function signature="rowsRemoved(QModelIndex,int,int)" private-signal="yes"/>

    <modify-function signature="columnsAboutToBeInserted(QModelIndex,int,int)" private-signal="yes"/>
    <modify-function signature="columnsInserted(QModelIndex,int,int)" private-signal="yes"/>

    <modify-function signature="columnsAboutToBeRemoved(QModelIndex,int,int)" private-signal="yes"/>
    <modify-function signature="columnsRemoved(QModelIndex,int,int)" private-signal="yes"/>

    <modify-function signature="modelAboutToBeReset()" private-signal="yes"/>
    <modify-function signature="modelReset()" private-signal="yes"/>
  </object-type>

  <object-type name="QAbstractListModel">
    <extra-includes>
      <include file-name="QStringList" location="global"/>
      <include file-name="QSize" location="global"/>
    </extra-includes>
  </object-type>

  <value-type name="QUrl">
    <extra-includes>
      <include file-name="QStringList" location="global"/>
    </extra-includes>
    <modify-function signature="operator=(QUrl)" remove="all"/>
    <modify-function signature="operator=(QString)" remove="all"/>

    <modify-function signature="fromPunycode(const QByteArray&amp;)" remove="all"/>
    <!--### Obsolete in 4.3-->
    <modify-function signature="toPunycode(const QString&amp;)" remove="all"/>
    <!--### Obsolete in 4.3-->
  </value-type>

  <value-type name="QRegExp">
    <extra-includes>
      <include file-name="QStringList" location="global"/>
    </extra-includes>
    <modify-function signature="operator=(QRegExp)" remove="all"/>
    <modify-function signature="pos(int)const">
      <remove />
    </modify-function>
    <modify-function signature="cap(int)const">
      <remove />
    </modify-function>
    <modify-function signature="capturedTexts()const">
      <remove />
    </modify-function>
    <modify-function signature="errorString()const">
      <remove />
    </modify-function>
  </value-type>

  <value-type name="QFileInfo">
    <extra-includes>
      <include file-name="QDateTime" location="global"/>
      <include file-name="QDir" location="global"/>
    </extra-includes>
    <modify-function signature="operator!=(const QFileInfo &amp;)const" remove="all"/>
    <modify-function signature="operator==(const QFileInfo &amp;)const" remove="all"/>
    <modify-function signature="operator=(QFileInfo)" remove="all"/>
    <modify-function signature="setFile(QFile)">
      <modify-argument index="1">
        <reference-count action="ignore"/>
      </modify-argument>
    </modify-function>

    <modify-function signature="readLink()const" remove="all"/>
    <!--### Obsolete in 4.3-->
  </value-type>

  <interface-type name="QFactoryInterface" />

  <value-type name="QByteArray">

    <extra-includes>
      <include file-name="QNoImplicitBoolCast" location="global"/>
    </extra-includes>

    <!-- removed functions -->
    <modify-function signature="begin()" remove="all"/>
    <modify-function signature="begin()const" remove="all"/>
    <modify-function signature="constBegin()const" remove="all"/>
    <modify-function signature="constData()const" remove="all"/>
    <modify-function signature="constEnd()const" remove="all"/>
    <modify-function signature="count()const" remove="all"/>
    <modify-function signature="data()const" remove="all"/>
    <modify-function signature="end()" remove="all"/>
    <modify-function signature="end()const" remove="all"/>
    <modify-function signature="number(uint,int)" remove="all"/>
    <modify-function signature="number(unsigned long long,int)" remove="all"/>
    <modify-function signature="operator const char *()const" remove="all"/>
    <modify-function signature="operator const void *()const" remove="all"/>
    <modify-function signature="operator+=(const char*)" remove="all"/>
    <modify-function signature="operator!=(QString)const" remove="all"/>
    <modify-function signature="operator=(const char*)" remove="all"/>
    <modify-function signature="operator[](int)" remove="all"/>
    <modify-function signature="operator[](int)const" remove="all"/>
    <modify-function signature="operator[](uint)" remove="all"/>
    <modify-function signature="operator[](uint)const" remove="all"/>
    <modify-function signature="push_back(char)" remove="all"/>
    <modify-function signature="push_back(const char*)" remove="all"/>
    <modify-function signature="push_front(char)" remove="all"/>
    <modify-function signature="push_front(const char*)" remove="all"/>
    <modify-function signature="setNum(uint,int)" remove="all"/>
    <modify-function signature="setNum(unsigned long long,int)" remove="all"/>
    <modify-function signature="setNum(unsigned short,int)" remove="all"/>
    <modify-function signature="toLong(bool*, int) const" remove="all"/>
    <modify-function signature="toLongLong(bool*, int) const" remove="all"/>
    <modify-function signature="toShort(bool*, int) const" remove="all"/>
    <modify-function signature="toUInt(bool*, int) const" remove="all"/>
    <modify-function signature="toULong(bool*, int) const" remove="all"/>
    <modify-function signature="toULongLong(bool*, int) const" remove="all"/>

    <!-- functions made private... -->
    <modify-function signature="operator=(QByteArray)" access="private"/>
    <modify-function signature="operator+=(QString)" remove="all"/>
    <modify-function signature="operator+=(char)" remove="all"/>
  </value-type>

  <value-type name="QTextBoundaryFinder">
    <modify-function signature="QTextBoundaryFinder(QTextBoundaryFinder::BoundaryType,const QChar*,int,unsigned char*,int)" remove="all" />
    <modify-function signature="operator=(QTextBoundaryFinder)" remove="all" />
  </value-type>

  <value-type name="QEasingCurve">
    <modify-function signature="customType()const" remove="all" />
    <modify-function signature="setCustomType(double)" remove="all" />
  </value-type>

  <object-type name="QAbstractAnimation" />
  <object-type name="QVariantAnimation" />
  <object-type name="QAnimationGroup" />
  <object-type name="QPauseAnimation" />
  <object-type name="QParallelAnimationGroup" />
  <object-type name="QSequentialAnimationGroup" />
  <object-type name="QPropertyAnimation" />

  <object-type name="QAbstractState" />
  <object-type name="QAbstractTransition" />
  <object-type name="QState" />
  <object-type name="QStateMachine" />
  <object-type name="QHistoryState" />
  <object-type name="QSignalTransition" />
  <object-type name="QEventTransition" />
  <object-type name="QFinalState" />

  <object-type name="QXmlStreamEntityResolver" />
  <object-type name="QAbstractEventDispatcher"/>
  <object-type name="QEventLoop"/>
  <object-type name="QFile">
    <modify-function signature="readLink()const" remove="all"/>
    <!--### Obsolete in 4.3-->
    <modify-function signature="readLink(QString)" remove="all"/>
    <!--### Obsolete in 4.3-->
    <modify-function signature="map(long long,long long,QFile::MemoryMapFlags)" remove="all" />
    <!-- Can't provide same API and performance -->
    <modify-function signature="unmap(unsigned char*)" remove="all" />
    <!-- Can't provide same API and performance -->
  </object-type>

  <object-type name="QIODevice"/>
  <object-type name="QStateMachine::SignalEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::StateMachineSignal" />
  <object-type name="QStateMachine::WrappedEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::StateMachineWrapped" />

  <object-type name="QCryptographicHash"/>
  <object-type name="QLibraryInfo"/>
  <object-type name="QMutex"/>
  <object-type name="QSemaphore"/>
  <object-type name="QSocketNotifier"/>
  <object-type name="QSystemLocale"/>
  <object-type name="QTemporaryFile">
    <modify-function signature="fileName()const" rename="uniqueFilename"/>
  </object-type>
  <object-type name="QMimeData">
    <extra-includes>
      <include file-name="QStringList" location="global"/>
      <include file-name="QUrl" location="global"/>
    </extra-includes>
  </object-type>
  <object-type name="QTextCodec">

    <modify-function signature="setCodecForTr(QTextCodec*)">
      <access modifier="private"/>
      <modify-argument index="1">
        <reference-count action="set" variable-name="__rcCodecForTr"/>
      </modify-argument>
    </modify-function>
    <modify-function signature="setCodecForCStrings(QTextCodec*)">
      <modify-argument index="1">
        <reference-count action="set" variable-name="__rcCodecForCStrings"/>
      </modify-argument>
    </modify-function>
    <modify-function signature="setCodecForLocale(QTextCodec*)">
      <modify-argument index="1">
        <reference-count action="set" variable-name="__rcCodecForLocale"/>
      </modify-argument>
    </modify-function>


    <modify-function signature="codecForTr()">
      <remove/>
    </modify-function>

    <modify-function signature="QTextCodec()">
      <modify-argument index="-1">
        <define-ownership class="java" owner="c++"/>
      </modify-argument>
    </modify-function>

    <modify-function signature="fromUnicode(const QChar*,int,QTextCodec::ConverterState*)const">
      <remove/>
    </modify-function>

    <modify-function signature="toUnicode(const char*,int,QTextCodec::ConverterState*)const">
      <remove/>
    </modify-function>

    <modify-function signature="toUnicode(const char*)const">
      <remove/>
    </modify-function>
  </object-type>

  <object-type name="QTextDecoder">
    <modify-function signature="toUnicode(const char*,int)">
      <remove/>
    </modify-function>
    <modify-function signature="toUnicode(QString*,const char*,int)" remove="all"/>
  </object-type>
  <object-type name="QTextEncoder">
    <modify-function signature="fromUnicode(const QChar*,int)">
      <remove/>
    </modify-function>
  </object-type>
  <object-type name="QTimeLine"/>
  <object-type name="QTranslator">
    <modify-function signature="translate(const char*,const char*,const char*,int)const">
      <remove/>
    </modify-function>
  </object-type>

  <object-type name="QWaitCondition"/>

  <object-type name="QFileSystemWatcher">
    <extra-includes>
      <include file-name="QStringList" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QTextCodec::ConverterState">
    <include file-name="QTextCodec" location="global"/>
  </object-type>

  <object-type name="QBuffer">
    <modify-function signature="buffer()">
      <remove/>
    </modify-function>
    <modify-function signature="connectNotify(const char *)" remove="all" />
    <modify-function signature="disconnectNotify(const char *)" remove="all" />
  </object-type>

  <object-type name="QTimer"/>

  <object-type name="QAbstractFileEngineHandler">
    <modify-function signature="create(const QString &amp;) const">
      <modify-argument index="return">
        <define-ownership owner="c++" class="shell"/>
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QAbstractFileEngine::MapExtensionOption" />
  <object-type name="QAbstractFileEngine::MapExtensionReturn" />
  <object-type name="QAbstractFileEngine::UnMapExtensionOption" />
  <object-type name="QAbstractFileEngine">
    <extra-includes>
      <include file-name="QDateTime" location="global"/>
    </extra-includes>
    <modify-function signature="map(long long,long long,QFile::MemoryMapFlags)" remove="all" />
    <modify-function signature="unmap(unsigned char*)" remove="all" />
  </object-type>

  <object-type name="QProcess">
    <modify-function signature="readChannelMode()const" remove="all"/>
    <!--### Obsolete in 4.3-->
    <modify-function signature="setReadChannelMode(QProcess::ProcessChannelMode)" remove="all"/>
    <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QSignalMapper">
    <modify-function signature="mapped(const QString &amp;)">
      <rename to="mappedString"/>
    </modify-function>
    <modify-function signature="mapped(int)">
      <rename to="mappedInteger"/>
    </modify-function>
    <modify-function signature="mapped(QObject *)">
      <rename to="mappedQObject"/>
    </modify-function>
    <modify-function signature="mapped(QWidget *)" remove="all"/>

    <modify-function signature="mapping(QWidget*)const" remove="all"/>

    <modify-function signature="setMapping(QObject*,QWidget*)" remove="all"/>
  </object-type>

  <object-type name="QObject">
    <modify-function signature="childEvent(QChildEvent*)">
      <modify-argument index="1" invalidate-after-use="yes" />
    </modify-function>
    <modify-function signature="customEvent(QEvent*)">
      <modify-argument index="1" invalidate-after-use="yes" />
    </modify-function>
    <modify-function signature="event(QEvent*)">
      <modify-argument index="1" invalidate-after-use="yes" />
    </modify-function>
    <modify-function signature="eventFilter(QObject*,QEvent*)">
      <modify-argument index="2" invalidate-after-use="yes" />
    </modify-function>
    <modify-function signature="timerEvent(QTimerEvent*)">
      <modify-argument index="1" invalidate-after-use="yes" />
    </modify-function>

    <modify-function signature="installEventFilter(QObject*)">
      <modify-argument index="1">
        <reference-count action="add" variable-name="__rcEventFilters"/>
      </modify-argument>
    </modify-function>
    <modify-function signature="removeEventFilter(QObject*)">
      <modify-argument index="1">
        <reference-count action="remove" variable-name="__rcEventFilters"/>
      </modify-argument>
    </modify-function>
    <modify-function signature="setParent(QObject*)">
      <modify-argument index="1">
        <reference-count action="ignore"/>
      </modify-argument>
    </modify-function>

    <modify-function signature="deleteLater()">
      <rename to="disposeLater"/>
    </modify-function>

    <modify-function signature="inherits(const char*)const">
      <remove/>
    </modify-function>

    <modify-function signature="property(const char*)const">
      <access modifier="private"/>
    </modify-function>

    <modify-function signature="setProperty(const char*,QVariant)">
      <access modifier="private"/>
    </modify-function>


    <extra-includes>
      <include file-name="QVarLengthArray" location="global"/>
    </extra-includes>

  </object-type>

  <object-type name="QCoreApplication">
    <extra-includes>
      <include file-name="QStringList" location="global"/>
    </extra-includes>

    <modify-function signature="argv()" remove="all" />
    <!-- Obsolete -->
    <modify-function signature="argc()" remove="all" />
    <!-- Obsolete -->

    <modify-function signature="notify(QObject*,QEvent*)">
      <modify-argument index="2" invalidate-after-use="yes" />
    </modify-function>


    <modify-function signature="QCoreApplication(int &amp;, char  **)">
      <access modifier="private"/>
    </modify-function>
    <modify-function signature="removePostedEvents(QObject*)">
      <modify-argument index="1">
        <reference-count action="ignore"/>
      </modify-argument>
    </modify-function>
    <modify-function signature="removePostedEvents(QObject*,int)">
      <modify-argument index="1">
        <reference-count action="ignore"/>
      </modify-argument>
    </modify-function>

    <modify-function signature="installTranslator(QTranslator *)">
      <modify-argument index="1">
        <reference-count action="add" variable-name="__rcTranslators"/>
      </modify-argument>
    </modify-function>

    <modify-function signature="removeTranslator(QTranslator *)">
      <modify-argument index="1">
        <reference-count action="remove" variable-name="__rcTranslators"/>
      </modify-argument>
    </modify-function>


    <modify-function signature="postEvent(QObject*,QEvent*)">
      <modify-argument index="2">
        <define-ownership class="java" owner="c++"/>
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QSettings">
    <extra-includes>
      <include file-name="QStringList" location="global"/>
    </extra-includes>

    <modify-function signature="setIniCodec(QTextCodec*)">
      <modify-argument index="1">
        <reference-count action="set" variable-name="__rcIniCodec" />
      </modify-argument>
    </modify-function>

    <modify-function signature="setSystemIniPath(const QString&amp;)" remove="all"/>
    <!--### Obsolete in 4.3-->
    <modify-function signature="setUserIniPath(const QString&amp;)" remove="all"/>
    <!--### Obsolete in 4.3-->
  </object-type>

  <object-type name="QEvent" polymorphic-base="yes" polymorphic-id-expression="%1-&gt;type() == QEvent::None"/>
  <object-type name="QChildEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::ChildAdded || %1-&gt;type() == QEvent::ChildPolished || %1-&gt;type() == QEvent::ChildRemoved">
    <modify-field name="c" read="false" write="false"/>
  </object-type>
  <object-type name="QTimerEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::Timer"/>
  <object-type name="QDynamicPropertyChangeEvent" polymorphic-id-expression="%1-&gt;type() == QEvent::DynamicPropertyChange"/>

  <object-type name="QDataStream">
    <modify-function signature="setDevice(QIODevice*)">
      <modify-argument index="1">
        <reference-count action="set" variable-name="__rcDevice"/>
      </modify-argument>
    </modify-function>
    <modify-function signature="unsetDevice()">
      <inject-code position="end">
        __rcDevice = null;
      </inject-code>
    </modify-function>


    <modify-function signature="operator&lt;&lt;(const char*)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(unsigned char)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(unsigned int)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(unsigned long long)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(unsigned short)">
      <remove/>
    </modify-function>

    <modify-function signature="operator&gt;&gt;(char &amp;*)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(uint&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(unsigned char&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(unsigned long long&amp;)">
      <remove/>
    </modify-function>

    <modify-function signature="readRawData(char*,int)">
      <remove/>
    </modify-function>
    <modify-function signature="readBytes(char&amp;*,uint&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="writeRawData(const char*,int)">
      <remove/>
    </modify-function>
    <modify-function signature="writeBytes(const char*,uint)">
      <remove/>
    </modify-function>
  </object-type>

  <object-type name="QFSFileEngine">
    <extra-includes>
      <include file-name="QDateTime" location="global"/>
    </extra-includes>
  </object-type>

  <object-type name="QTextStream">
    <modify-function signature="QTextStream(QByteArray *, QFlags&lt;QIODevice::OpenModeFlag&gt;)">
      <remove/>
    </modify-function>
    <modify-function signature="QTextStream(QString*,QFlags&lt;QIODevice::OpenModeFlag&gt;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(QChar&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(const void*)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(unsigned int)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(unsigned long long)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(const QChar &amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(unsigned long)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(signed long)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(const char*)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(unsigned short)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(const QByteArray&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(unsigned long long&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(uint&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(ulong&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="setString(QString*,QFlags&lt;QIODevice::OpenModeFlag&gt;)">
      <remove />
    </modify-function>
    <modify-function signature="string()const">
      <remove />
    </modify-function>
    <modify-function signature="operator&gt;&gt;(signed long&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(char*)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(QByteArray&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(QString&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&gt;&gt;(unsigned short&amp;)">
      <remove/>
    </modify-function>
    <modify-function signature="operator&lt;&lt;(const QString&amp;)">
      <remove/>
    </modify-function>


    <modify-function signature="setCodec(QTextCodec *)">
      <modify-argument index="1">
        <reference-count action="set" variable-name="__rcCodec"/>
      </modify-argument>
    </modify-function>

    <modify-function signature="QTextStream(QIODevice *)">
      <modify-argument index="1">
        <reference-count action="set" variable-name="__rcDevice"/>
      </modify-argument>
    </modify-function>
    <modify-function signature="setDevice(QIODevice *)">
      <modify-argument index="1">
        <reference-count action="set" variable-name="__rcDevice"/>
      </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="QSystemSemaphore" />

  <namespace-type name="QtConcurrent" target-type="class" />

  <value-type name="QFuture" generate="no">
    <modify-function signature="operator T() const" remove="all" />
    <modify-function signature="operator=(const QFuture &amp;)" remove="all" />
  </value-type>
  <value-type name="QtJambiVoidFuture" java-name="QFutureVoid">
    <modify-function signature="resultCount()const" remove="all" />
    <modify-function signature="isResultReadyAt(int)const" remove="all" />
  </value-type>
  <value-type name="QtJambiFuture" java-name="QFuture" generic-class="yes" />

  <object-type name="QFutureWatcherBase">
    <modify-function signature="connectNotify(const char *)" remove="all" />
    <modify-function signature="disconnectNotify(const char *)" remove="all" />
  </object-type>
  <object-type name="QtJambiVoidFutureWatcher" java-name="QFutureWatcherVoid" />

  <object-type name="QFutureWatcher" generate="no">
    <modify-function signature="future()const" remove="all" />
  </object-type>
  <object-type name="QtJambiFutureWatcher" java-name="QFutureWatcher" generic-class="yes" />

  <object-type name="QFutureSynchronizer" generate="no" />
  <object-type name="QtJambiFutureSynchronizer" generic-class="yes" java-name="QFutureSynchronizer" />
  <object-type name="QtJambiVoidFutureSynchronizer" java-name="QFutureSynchronizerVoid" />
  <object-type name="QThreadPool" />

  <object-type name="QFutureIterator" generate="no">
    <modify-function signature="operator=(const QFuture&amp;)" remove="all" />
  </object-type>
  <object-type name="QtJambiFutureIterator" generic-class="yes" java-name="QFutureIterator" />
  <object-type name="QRunnable" />

  <!-- Inefficient hash codes -->
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QUuid' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QLocale' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QFuture' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QRegExp' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QFutureVoid' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QUrl' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: Class 'QProcessEnvironment' has equals operators but no qHash() function. Hashcode of objects will consistently be 0." />

  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::selectIteration', unmatched parameter type 'T'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QVariantAnimation::registerInterpolator', unmatched parameter type 'QVariantAnimation::Interpolator'" />

  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'Qt::Initialization'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'std::*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*Private\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type '*Private&amp;'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QMetaObject'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'FILE\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QByteArray::Data\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QTSMFC'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QTSMFI'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QAbstractFileEngine::ExtensionOption const\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QAbstractFileEngine::Iterator\*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QDataStream::ByteOrder'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: visibility of function '*' modified in class '*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: hiding of function '*' in class '*'"/>
  <suppress-warning text="WARNING(CppImplGenerator) :: protected function '*' in final class '*'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QPointer&lt;*&gt;'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping * unmatched *type 'QVector&lt;*&gt;'"/>
  <suppress-warning text="* private virtual function '*' in 'QAbstractListModel'"/>
  <suppress-warning text="* private virtual function '*' in 'QAbstractTableModel'"/>
  <suppress-warning text="* private virtual function '*' in 'QListWidget'"/>
  <suppress-warning text="* private virtual function '*' in 'QTreeWidget'"/>
  <suppress-warning text="* private virtual function '*' in 'QFontDialog'"/>
  <suppress-warning text="* private virtual function '*' in 'QTableWidget'"/>
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFutureWatcherBase::futureInterface', unmatched return type 'QFutureInterfaceBase&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFutureWatcherBase::futureInterface', unmatched return type 'QFutureInterfaceBase const&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFutureWatcher::futureInterface', unmatched return type 'QFutureInterfaceBase&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFutureWatcher::futureInterface', unmatched return type 'QFutureInterfaceBase const&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: unknown operator 'T'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::constBegin', unmatched return type 'const_iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::end', unmatched return type 'const_iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::constEnd', unmatched return type 'const_iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::QFuture', unmatched parameter type 'QFutureInterface&lt;T&gt;*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QFuture::begin', unmatched return type 'const_iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::advance', unmatched parameter type 'It&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMapped', unmatched return type 'Sequence'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMapped', unmatched return type 'QList&lt;U&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMapped', unmatched return type 'QList&lt;MapFunctor::result_type&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMapped', unmatched return type 'OutputSequence'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::filtered', unmatched parameter type 'Iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::filtered', unmatched parameter type 'Sequence const&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::filter', unmatched parameter type 'Sequence&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::startFiltered', unmatched return type 'ThreadEngineStarter&lt;qValueType&lt;Iterator&gt;::value_type&gt;" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::startFiltered', unmatched return type 'ThreadEngineStarter&lt;Sequence::value_type&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::startFiltered', unmatched return type 'ThreadEngineStarter&lt;Iterator::value_type&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMappedReduced', unmatched return type 'V'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMappedReduced', unmatched return type 'W'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMappedReduced', unmatched return type 'ResultType'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMappedReduced', unmatched return type 'U'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingFiltered', unmatched return type 'OutputSequence'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingFiltered', unmatched return type 'Sequence'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::startMappedReduced', unmatched return type 'ThreadEngineStarter&lt;ResultType&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingFilteredReduced', unmatched return type 'U'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingFilteredReduced', unmatched return type 'V'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingFilteredReduced', unmatched return type 'ResultType'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::startMap', unmatched return type 'ThreadEngineStarter&lt;void&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::startThreadEngine', unmatched return type 'ThreadEngineStarter&lt;ThreadEngine::ResultType&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::mappedReduced', unmatched parameter type 'Iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::mappedReduced', unmatched parameter type 'Sequence const&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::filteredReduced', unmatched parameter type 'Iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::filteredReduced', unmatched parameter type 'Sequence const&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::map', unmatched parameter type 'Iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::map', unmatched parameter type 'Sequence&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::filterInternal', unmatched return type 'ThreadEngineStarter&lt;void&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::createFunctor', unmatched return type 'QtConcurrent::SelectMemberFunctor0lt;T,Class&gt;::type'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::createFunctor', unmatched return type 'SelectFunctor0&lt;T,T&gt;::type'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::mapped', unmatched parameter type 'Iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::mapped', unmatched parameter type 'Sequence const&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMap', unmatched parameter type 'Iterator'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingMap', unmatched parameter type 'Sequence&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::startMapped', unmatched return type 'QtConcurrent::ThreadEngineStarter&lt;T&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::startFilteredReduced', unmatched return type 'ThreadEngineStarter&lt;ResultType&gt;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::run', unmatched parameter type 'Class const*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::run', unmatched parameter type 'Class*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::run', unmatched parameter type 'Class const&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::run', unmatched parameter type 'FunctionObject*'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::run', unmatched parameter type 'FunctionObject'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::run', unmatched parameter type 'T'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::blockingFilter', unmatched parameter type 'Sequence&amp;'" />
  <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QtConcurrent::createFunctor', unmatched return type 'QtConcurrent::SelectMemberFunctor0&lt;T,Class&gt;::type'" />

  <suppress-warning text="WARNING(Parser) :: ** WARNING scope not found for function definition:QFuture&lt;void&gt;::operator= - definition *ignored*" />
  <suppress-warning text="WARNING(Parser) :: ** WARNING scope not found for function definition:QFutureInterface&lt;void&gt;::future - definition *ignored*" />
  <suppress-warning text="WARNING(Parser) :: ** WARNING scope not found for function definition:QFutureWatcher&lt;void&gt;::setFuture - definition *ignored*" />


</typesystem>
